<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAkGBhAQEBUQEBISFRQVDxAUFRQUDxAVEBAQFRAVFRQUEhIX
        HCYeFxkkGRQUHy8gIycpLCwsFR4xNTAqNSYrLCn/2wBDAQkKCg4MDhoPDxcsHBwcKSksKSwsLCkpKSwp
        KSksKSksKSwpKSksLCkpKSwsKSwsKSkpKSkpKSwpLCksKSwpKSn/wAARCADhAOEDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3GiiigAooqG5vEjGWIFAE1Fcve+OoVOE+Y+3P69KzJPF8r9OB
        9f8ACgDuiwFRPeRr1dR/wIVwv9oyP1Ymta00ttpaTOSpwPTjqaAN19YhH8Y/AE1E2vwjuT/wGuTCk0ik
        nja3/fJqnFiTTOobxLF6N+Q/xqNvFMf91vzFc/5Dnoj/APfJpDZSn+Bv0o5X2C6N1vF8Y/gP/fX/ANao
        W8cRDqh/76/+tWI2kzHon6iq8nhqc9Qqj1LD+QpcrC6N1viHbjqp/M/4VNZ+OoZjiNWOOvXA+pxXNL4W
        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
        gAooooAKKKKAP//Z
</value>
  </data>
</root>