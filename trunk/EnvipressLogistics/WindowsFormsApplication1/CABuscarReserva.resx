<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAkGBhQSEBUSEBMVFBEUFBQUFA8WFRIVFRQQFRAVFBQWFBQX
        GyYeGBkjHBQUHy8gIycpLCwsFSAxNTAqNSYrLCr/2wBDAQkKCg4MDhoPDxosJR8kLCwpLCo1LCkqLC8q
        LzIpLzQwKS4sLCwsLCw0LyosNCwpLC0sLCksLCwvLSwsLywpKSn/wAARCADSAPADASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3GiiigAooooAKKKo6jqqRbQctI/CQoMu5HXA7AdycAdzTUXJ2
        Qm0ldl6kJrn9Q1Bo1D3c4tkY4WKP5nP1k2kk/wC6ox61YsdPtZkEiATKejuzyE+ud5JB9q1dLljzS272
        0+/RfcZqpd8q39dfuNcOD0Ip1Zz+H7c/8sY/qFAP5iq8ugsnNtPJEeyMTNEfYo5JA/3WFSowfX8P8r/k
        O8l0/E12cDqcCsa+8ZWkXDTKT/dTLn/x3Nc74q1WRrWe0uI/LuJIZBEVJMcxAyPKY8hsgfKea8e0nXTu
        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
        A//Z
</value>
  </data>
</root>